{"version":3,"sources":["AppClass.tsx","index.tsx"],"names":["App","state","key","handleDocumentKeyUp","event","setState","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZH,IAAKE,EAAMF,OAfjB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,uBAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,uBAV/C,oBAmBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKP,MAAMC,IAAX,mCAC6BM,KAAKP,MAAMC,IADxC,KAGC,kCA1BZ,GAAyBS,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2ffee90b.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentKeyUp);\n  }\n\n  handleDocumentKeyUp = (event: KeyboardEvent) => {\n    this.setState({\n      key: event.key,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key ? (\n            `The last pressed key is [${this.state.key}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './AppClass';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}